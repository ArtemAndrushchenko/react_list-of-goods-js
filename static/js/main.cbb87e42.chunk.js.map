{"version":3,"sources":["components/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodList","goods","map","good","goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setsortField","isReversed","SetIsReversed","visibleGoods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","revers","ReactDOM","render","document","getElementById"],"mappings":"iPAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SCCjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SAyBnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA1BR,SAA0BZ,EAA1B,GAA6D,IAA1BQ,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACtCG,EAAa,YAAOb,GAmB1B,OAjBIQ,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAC7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXR,GACFG,EAAcM,UAGTN,EAMcO,CACnBjB,EACA,CAAEK,YACAE,eAGJ,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,YAAaf,IAAcJ,IAE7BoB,QAAS,kBAAMf,EAAaL,IAL9B,iCAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,YAAaf,IAAcH,IAE7BmB,QAAS,kBAAMf,EAAaJ,IAL9B,4BAUA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,aAAcb,IAEhBc,QAAS,kBAAMb,GAAc,SAAAc,GAAM,OAAKA,MAL1C,sBAUEjB,GAAaE,IACb,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPb,GAAc,GACdF,EAAa,KALjB,sBAaJ,cAAC,EAAD,CAAUT,MAAOY,QClGvBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cbb87e42.chunk.js","sourcesContent":["import React from 'react';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>{good}</li>\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\nimport { GoodList } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setsortField] = useState('');\n  const [isReversed, SetIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortField,\n      isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            ' is-light': sortField !== SORT_FIELD_ALPHABET,\n          })}\n          onClick={() => setsortField(SORT_FIELD_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            ' is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n          onClick={() => setsortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            ' is-light': !isReversed,\n          })}\n          onClick={() => SetIsReversed(revers => !revers)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              SetIsReversed(false);\n              setsortField('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}